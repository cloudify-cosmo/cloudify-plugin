<?xml version="1.1" encoding="UTF-8"?><flow-definition plugin="workflow-job@2.37">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.6.0"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.6.0">
      <jobProperties/>
      <triggers/>
      <parameters>
        <string>infra_type</string>
        <string>deployment_id</string>
        <string>tenant</string>
        <string>cfy_credentials</string>
      </parameters>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.13"/>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <com.cloudbees.plugins.credentials.CredentialsParameterDefinition plugin="credentials@2.3.7">
          <name>cfy_credentials</name>
          <description>Cloudify credentials</description>
          <defaultValue/>
          <credentialType>com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl</credentialType>
          <required>true</required>
        </com.cloudbees.plugins.credentials.CredentialsParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>tenant</name>
          <description>Cloudify tenant to use (empty for default)</description>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>infra_type</name>
          <description>Type of environment to create</description>
          <choices>
            <string>aws-using-terraform</string>
            <string>aws</string>
            <string>azure</string>
            <string>azure-arm</string>
            <string>gcp</string>
            <string>openstack</string>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>deployment_id</name>
          <description>Name of environment to create</description>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>pipeline {
    agent any
    
    parameters {
        credentials(name: 'cfy_credentials', description: 'Cloudify credentials', defaultValue: '',
            credentialType: "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl",
            required: true)
        string(name: 'tenant', description: 'Cloudify tenant to use (empty for default)', trim: true)
        choice(name: 'infra_type', description: 'Type of environment to create', choices: [
            'aws-using-terraform',
            'aws',
            'azure',
            'azure-arm',
            'gcp',
            'openstack'
            ])
        string(name: 'deployment_id', description: 'Name of environment to create', trim: true)
    }
    stages {
        stage('Build Cloudify Environment') {
            steps {
                script {
                    def mapping = [
                        'aws-using-terraform': 'infra-aws-terraform',
                        'aws': 'infra-aws',
                        'azure': 'infra-azure',
                        'azure-arm': 'infra-azure-arm',
                        'gcp': 'infra-gcp',
                        'openstack': 'infra-openstack'
                        ]
                    infra_blueprint = mapping["${params.infra_type}"]
                }
                
                createCloudifyEnv credentialsId: "${params.cfy_credentials}",
                    tenant: "${params.tenant}",
                    blueprintId: "${infra_blueprint}",
                    deploymentId: "${params.deployment_id}",
                    echoOutputs: true,
                    outputFile: 'outputs.json'
            }
        }
        stage('Wait for Input') {
            steps {
                input message: 'Proceed'
            }
        }
        stage('Delete Cloudify Environment') {
            steps {
                deleteCloudifyEnv credentialsId: "${params.cfy_credentials}",
                    tenant: "${params.tenant}",
                    deploymentId: "${params.deployment_id}"
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>