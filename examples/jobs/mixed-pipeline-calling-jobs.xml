<?xml version="1.1" encoding="UTF-8"?><flow-definition plugin="workflow-job@2.37">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.6.0"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.6.0">
      <jobProperties/>
      <triggers/>
      <parameters>
        <string>arm_resource_group</string>
        <string>environment_prefix</string>
        <string>cfn_template_url</string>
        <string>tf_template_url</string>
        <string>aws_credentials</string>
        <string>cfn_template_vars</string>
        <string>cfn_stack_name</string>
        <string>tf_template_vars</string>
        <string>arm_template_url</string>
        <string>cfy_credentials</string>
        <string>azure_credentials</string>
        <string>arm_template_vars</string>
      </parameters>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.13"/>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <com.cloudbees.plugins.credentials.CredentialsParameterDefinition plugin="credentials@2.3.7">
          <name>cfy_credentials</name>
          <description>Cloudify credentials</description>
          <defaultValue/>
          <credentialType>com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl</credentialType>
          <required>true</required>
        </com.cloudbees.plugins.credentials.CredentialsParameterDefinition>
        <com.cloudbees.plugins.credentials.CredentialsParameterDefinition plugin="credentials@2.3.7">
          <name>aws_credentials</name>
          <description>AWS credentials</description>
          <defaultValue/>
          <credentialType>com.cloudbees.jenkins.plugins.awscredentials.AWSCredentialsImpl</credentialType>
          <required>true</required>
        </com.cloudbees.plugins.credentials.CredentialsParameterDefinition>
        <com.cloudbees.plugins.credentials.CredentialsParameterDefinition plugin="credentials@2.3.7">
          <name>azure_credentials</name>
          <description>Azure credentials</description>
          <defaultValue/>
          <credentialType>com.microsoft.azure.util.AzureCredentials</credentialType>
          <required>true</required>
        </com.cloudbees.plugins.credentials.CredentialsParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>environment_prefix</name>
          <description>Environment identifier prefix</description>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>tf_template_url</name>
          <description>URL of the Terraform template archive</description>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>tf_template_vars</name>
          <description>Terraform template variables (as YAML or JSON)</description>
          <trim>false</trim>
        </hudson.model.TextParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>cfn_stack_name</name>
          <description>CloudFormation stack name to create</description>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>cfn_template_url</name>
          <description>URL of the CloudFormation template</description>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>cfn_template_vars</name>
          <description>CloudFormation template variables (as YAML or JSON)</description>
          <trim>false</trim>
        </hudson.model.TextParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>arm_template_url</name>
          <description>URL of the ARM template</description>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>arm_template_vars</name>
          <description>ARM template variables (as YAML or JSON)</description>
          <trim>false</trim>
        </hudson.model.TextParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>arm_resource_group</name>
          <description>Resource group to create on Azure</description>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>pipeline {
    agent any
    
    parameters {
        credentials(
            credentialType: 'com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl',
            defaultValue: '',
            description: 'Cloudify credentials',
            name: 'cfy_credentials',
            required: true)
        credentials(
            credentialType: 'com.cloudbees.jenkins.plugins.awscredentials.AWSCredentialsImpl',
            defaultValue: '',
            description: 'AWS credentials',
            name: 'aws_credentials',
            required: true)
        credentials(
            credentialType: 'com.microsoft.azure.util.AzureCredentials',
            defaultValue: '', 
            description: 'Azure credentials',
            name: 'azure_credentials',
            required: true)
        string(name: 'environment_prefix', description: 'Environment identifier prefix', trim: true)
        string(name: 'tf_template_url', description: 'URL of the Terraform template archive', trim: true)
        text(name: 'tf_template_vars', description: 'Terraform template variables (as YAML or JSON)')
        string(name: 'cfn_stack_name', description: 'CloudFormation stack name to create', trim: true)
        string(name: 'cfn_template_url', description: 'URL of the CloudFormation template', trim: true)
        text(name: 'cfn_template_vars', description: 'CloudFormation template variables (as YAML or JSON)')
        string(name: 'arm_template_url', description: 'URL of the ARM template', trim: true)
        text(name: 'arm_template_vars', description: 'ARM template variables (as YAML or JSON)')
        string(name: 'arm_resource_group', description: 'Resource group to create on Azure', trim: true)
    }

    stages {
        stage('Build Cloudify Environments') {
            parallel {
                stage('AWS using Terraform') {
                    steps {
                        build job: 'terraform-build-step', parameters: [
                            string(name: 'environment_id', value: "${params.environment_prefix}_tf"),
                            string(name: 'template_url', value: "${params.tf_template_url}"),
                            text(name: 'variables', value: "${params.tf_template_vars}"),
                            credentials(name: 'cfy_credentials', value: "${params.cfy_credentials}"),
                            credentials(name: 'aws_credentials', value: "${params.aws_credentials}")
                            ]
                    }
                }
                stage('AWS using CloudFormation') {
                    steps {
                        build job: 'cloudformation-build-step', parameters: [
                            string(name: 'environment_id', value: "${params.environment_prefix}_cfn"),
                            string(name: 'stack_name', value: "${params.cfn_stack_name}"),
                            string(name: 'template_url', value: "${params.cfn_template_url}"),
                            text(name: 'template_parameters', value: "${params.cfn_template_vars}"),
                            credentials(name: 'cfy_credentials', value: "${params.cfy_credentials}"),
                            credentials(name: 'aws_credentials', value: "${params.aws_credentials}")
                            ]
                    }
                }
                stage('Azure using ARM') {
                    steps {
                        build job: 'arm-build-step', parameters: [
                            string(name: 'environment_id', value: "${params.environment_prefix}_arm"),
                            string(name: 'resource_group_name', value: "${params.arm_resource_group}"),
                            string(name: 'template_file', value: "${params.arm_template_url}"),
                            text(name: 'parameters', value: "${params.arm_template_vars}"),
                            credentials(name: 'cfy_credentials', value: "${params.cfy_credentials}"),
                            credentials(name: 'azure_credentials', value: "${params.azure_credentials}")
                            ]
                    }
                }
            }
        }
        stage('Run tests') {
            steps {
                input message: 'Proceed?'
            }
        }
        stage('Destroy Cloudify Environments') {
            parallel {
                stage('Destroy Terraform environment') {
                    steps {
                        build job: 'delete-environment', parameters: [
                            credentials(name: 'cfy_credentials', value: "${params.cfy_credentials}"),
                            string(name: 'deployment_id', value: "${params.environment_prefix}_tf")
                            ]
                    }
                }
                stage('Destroy CloudFormation environment') {
                    steps {
                        build job: 'delete-environment', parameters: [
                            credentials(name: 'cfy_credentials', value: "${params.cfy_credentials}"),
                            string(name: 'deployment_id', value: "${params.environment_prefix}_cfn")
                            ]
                    }
                }
                stage('Destroy Azure ARM environment') {
                    steps {
                        build job: 'delete-environment', parameters: [
                            credentials(name: 'cfy_credentials', value: "${params.cfy_credentials}"),
                            string(name: 'deployment_id', value: "${params.environment_prefix}_arm")
                            ]
                    }
                }
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>